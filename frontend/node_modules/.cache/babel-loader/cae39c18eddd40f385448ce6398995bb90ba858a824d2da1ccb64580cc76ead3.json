{"ast":null,"code":"var _jsxFileName = \"E:\\\\Academic SLIIT\\\\Y3S1 Documents\\\\CSSE\\\\Assignment 2\\\\Smart-health-care-system\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n/**\r\n * Auth Context Provider\r\n * Manages authentication state and provides auth methods to components\r\n */\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    // Check for existing token on app load\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: JSON.parse(user),\n          token\n        }\n      });\n    } else {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authService.login(credentials);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        payload: error.message\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: 'LOGOUT'\n      });\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Auth Reducer\r\n * Handles authentication state updates\r\n */\n_s(AuthProvider, \"IrWsX8AR8o7lKftmodCJE4rAhWk=\");\n_c = AuthProvider;\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        isAuthenticated: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n/**\r\n * Custom hook to use auth context\r\n */\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","state","dispatch","authReducer","user","token","isAuthenticated","loading","error","localStorage","getItem","type","payload","JSON","parse","login","credentials","response","setItem","stringify","success","message","logout","console","removeItem","updateUser","userData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/Academic SLIIT/Y3S1 Documents/CSSE/Assignment 2/Smart-health-care-system/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\n/**\r\n * Auth Context Provider\r\n * Manages authentication state and provides auth methods to components\r\n */\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, {\r\n    user: null,\r\n    token: null,\r\n    isAuthenticated: false,\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check for existing token on app load\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    \r\n    if (token && user) {\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user: JSON.parse(user), token }\r\n      });\r\n    } else {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await authService.login(credentials);\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: response\r\n      });\r\n      \r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'LOGIN_ERROR',\r\n        payload: error.message\r\n      });\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      dispatch({ type: 'LOGOUT' });\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    }\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    dispatch({\r\n      type: 'UPDATE_USER',\r\n      payload: userData\r\n    });\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Auth Reducer\r\n * Handles authentication state updates\r\n */\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        isAuthenticated: false\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * Custom hook to use auth context\r\n */\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}